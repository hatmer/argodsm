Start testing: Mar 17 17:49 UTC
----------------------------------------------------------
1/10 Testing: trivialTests-mpi
1/10 Test: trivialTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/trivialTests"
Directory: /home/atmerhannah/argodsm/build/tests
"trivialTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/trivialTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"trivialTests-mpi" end time: Mar 17 17:49 UTC
"trivialTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

2/10 Testing: allocatorsTests-mpi
2/10 Test: allocatorsTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/allocatorsTests"
Directory: /home/atmerhannah/argodsm/build/tests
"allocatorsTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/allocatorsTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"allocatorsTests-mpi" end time: Mar 17 17:49 UTC
"allocatorsTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

3/10 Testing: prefetchTests-mpi
3/10 Test: prefetchTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/prefetchTests"
Directory: /home/atmerhannah/argodsm/build/tests
"prefetchTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/prefetchTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"prefetchTests-mpi" end time: Mar 17 17:49 UTC
"prefetchTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

4/10 Testing: apiTests-mpi
4/10 Test: apiTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/apiTests"
Directory: /home/atmerhannah/argodsm/build/tests
"apiTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/apiTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"apiTests-mpi" end time: Mar 17 17:49 UTC
"apiTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

5/10 Testing: ompTests-mpi
5/10 Test: ompTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/ompTests"
Directory: /home/atmerhannah/argodsm/build/tests
"ompTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/ompTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"ompTests-mpi" end time: Mar 17 17:49 UTC
"ompTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

6/10 Testing: cppSTLTests-mpi
6/10 Test: cppSTLTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/cppSTLTests"
Directory: /home/atmerhannah/argodsm/build/tests
"cppSTLTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/cppSTLTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"cppSTLTests-mpi" end time: Mar 17 17:49 UTC
"cppSTLTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

7/10 Testing: barrierTests-mpi
7/10 Test: barrierTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/barrierTests"
Directory: /home/atmerhannah/argodsm/build/tests
"barrierTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/barrierTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"barrierTests-mpi" end time: Mar 17 17:49 UTC
"barrierTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

8/10 Testing: uninitializedTests-mpi
8/10 Test: uninitializedTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/uninitializedTests"
Directory: /home/atmerhannah/argodsm/build/tests
"uninitializedTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/uninitializedTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"uninitializedTests-mpi" end time: Mar 17 17:49 UTC
"uninitializedTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

9/10 Testing: lockTests-mpi
9/10 Test: lockTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/lockTests"
Directory: /home/atmerhannah/argodsm/build/tests
"lockTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/lockTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"lockTests-mpi" end time: Mar 17 17:49 UTC
"lockTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

10/10 Testing: backendTests-mpi
10/10 Test: backendTests-mpi
Command: "/home/atmerhannah/openmpi/bin/mpirun" "-n" "2" "/home/atmerhannah/argodsm/build/bin/mpi/backendTests"
Directory: /home/atmerhannah/argodsm/build/tests
"backendTests-mpi" start time: Mar 17 17:49 UTC
Output:
----------------------------------------------------------
--------------------------------------------------------------------------
There are not enough slots available in the system to satisfy the 2
slots that were requested by the application:

  /home/atmerhannah/argodsm/build/bin/mpi/backendTests

Either request fewer slots for your application, or make more slots
available for use.

A "slot" is the Open MPI term for an allocatable unit where we can
launch a process.  The number of slots available are defined by the
environment in which Open MPI processes are run:

  1. Hostfile, via "slots=N" clauses (N defaults to number of
     processor cores if not provided)
  2. The --host command line parameter, via a ":N" suffix on the
     hostname (N defaults to 1 if not provided)
  3. Resource manager (e.g., SLURM, PBS/Torque, LSF, etc.)
  4. If none of a hostfile, the --host command line parameter, or an
     RM is present, Open MPI defaults to the number of processor cores

In all the above cases, if you want Open MPI to default to the number
of hardware threads instead of the number of processor cores, use the
--use-hwthread-cpus option.

Alternatively, you can use the --oversubscribe option to ignore the
number of available slots when deciding the number of processes to
launch.
--------------------------------------------------------------------------
<end of output>
Test time =   0.02 sec
----------------------------------------------------------
Test Failed.
"backendTests-mpi" end time: Mar 17 17:49 UTC
"backendTests-mpi" time elapsed: 00:00:00
----------------------------------------------------------

End testing: Mar 17 17:49 UTC
